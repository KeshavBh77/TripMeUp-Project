{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\OneDrive\\\\Desktop\\\\Programs\\\\cpsc-471-project\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Load persisted user\n  useEffect(() => {\n    const stored = localStorage.getItem('user');\n    if (stored) setUser(JSON.parse(stored));\n  }, []);\n\n  // Register new user locally\n  const register = (username, password) => {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    if (users.some(u => u.username === username)) {\n      throw new Error('Username already exists');\n    }\n    const newUser = {\n      username,\n      password\n    };\n    users.push(newUser);\n    localStorage.setItem('users', JSON.stringify(users));\n    // Auto‑login after register\n    login(username, password);\n  };\n\n  // Login existing user\n  const login = (username, password) => {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const found = users.find(u => u.username === username && u.password === password);\n    if (!found) {\n      throw new Error('Invalid credentials');\n    }\n    localStorage.setItem('user', JSON.stringify(found));\n    setUser(found);\n    navigate('/');\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","stored","localStorage","getItem","JSON","parse","register","username","password","users","some","u","Error","newUser","push","setItem","stringify","login","found","find","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kesha/OneDrive/Desktop/Programs/cpsc-471-project/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Load persisted user\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('user');\r\n    if (stored) setUser(JSON.parse(stored));\r\n  }, []);\r\n\r\n  // Register new user locally\r\n  const register = (username, password) => {\r\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n    if (users.some(u => u.username === username)) {\r\n      throw new Error('Username already exists');\r\n    }\r\n    const newUser = { username, password };\r\n    users.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n    // Auto‑login after register\r\n    login(username, password);\r\n  };\r\n\r\n  // Login existing user\r\n  const login = (username, password) => {\r\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const found = users.find(u => u.username === username && u.password === password);\r\n    if (!found) {\r\n      throw new Error('Invalid credentials');\r\n    }\r\n    localStorage.setItem('user', JSON.stringify(found));\r\n    setUser(found);\r\n    navigate('/');\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC3C,IAAIF,MAAM,EAAEF,OAAO,CAACK,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACvC,MAAMC,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IAC/D,IAAIM,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,CAAC,EAAE;MAC5C,MAAM,IAAIK,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IACA,MAAMC,OAAO,GAAG;MAAEN,QAAQ;MAAEC;IAAS,CAAC;IACtCC,KAAK,CAACK,IAAI,CAACD,OAAO,CAAC;IACnBX,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEX,IAAI,CAACY,SAAS,CAACP,KAAK,CAAC,CAAC;IACpD;IACAQ,KAAK,CAACV,QAAQ,EAAEC,QAAQ,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMS,KAAK,GAAGA,CAACV,QAAQ,EAAEC,QAAQ,KAAK;IACpC,MAAMC,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IAC/D,MAAMe,KAAK,GAAGT,KAAK,CAACU,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,IAAII,CAAC,CAACH,QAAQ,KAAKA,QAAQ,CAAC;IACjF,IAAI,CAACU,KAAK,EAAE;MACV,MAAM,IAAIN,KAAK,CAAC,qBAAqB,CAAC;IACxC;IACAV,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACE,KAAK,CAAC,CAAC;IACnDnB,OAAO,CAACmB,KAAK,CAAC;IACdlB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;;EAED;EACA,MAAMoB,MAAM,GAAGA,CAAA,KAAM;IACnBlB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IAC/BtB,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEmB,KAAK;MAAEX,QAAQ;MAAEc;IAAO,CAAE;IAAAxB,QAAA,EAC5DA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CA/CWF,YAAY;EAAA,QAENJ,WAAW;AAAA;AAAAqC,EAAA,GAFjBjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}