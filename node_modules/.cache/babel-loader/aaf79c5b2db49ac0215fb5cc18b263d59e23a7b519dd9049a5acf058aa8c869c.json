{"ast":null,"code":"import{useEffect,useState}from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function App(){const[message,setMessage]=useState('');useEffect(()=>{fetch('/api/hello/').then(res=>{if(!res.ok)throw new Error('API call failed');return res.json();}).then(data=>setMessage(data.message)).catch(err=>console.error('Fetch error:',err));},[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Message: \",message]})});}export default App;","map":{"version":3,"names":["useEffect","useState","jsxs","_jsxs","jsx","_jsx","App","message","setMessage","fetch","then","res","ok","Error","json","data","catch","err","console","error","children"],"sources":["C:/Users/kesha/OneDrive/Desktop/Programs/cpsc-471-project/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('/api/hello/')\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('API call failed');\r\n        return res.json();\r\n      })\r\n      .then(data => setMessage(data.message))\r\n      .catch(err => console.error('Fetch error:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message: {message}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE5C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACdS,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,GAAG,EAAI,CACX,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,iBAAiB,CAAC,CAC/C,MAAO,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,EAAIP,UAAU,CAACO,IAAI,CAACR,OAAO,CAAC,CAAC,CACtCS,KAAK,CAACC,GAAG,EAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,CAAEF,GAAG,CAAC,CAAC,CACrD,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,IAAA,QAAAe,QAAA,cACEjB,KAAA,OAAAiB,QAAA,EAAI,WAAS,CAACb,OAAO,EAAK,CAAC,CACxB,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}